import { MinBinaryHeap } from './heap'

test('Min heap ordered correctly', () => {
	const heap = new MinBinaryHeap<number>()

    heap.insert(15)
    expect(heap.peek()).toBe(15)
    heap.insert(10)
    expect(heap.peek()).toBe(10)
    heap.insert(-1)
    expect(heap.peek()).toBe(-1)
    heap.insert(100)
    expect(heap.peek()).toBe(-1)
    heap.insert(10)
    expect(heap.peek()).toBe(-1)
    heap.insert(10)
    expect(heap.peek()).toBe(-1)
    heap.insert(12)
    expect(heap.peek()).toBe(-1)
    heap.insert(9)
    expect(heap.peek()).toBe(-1)
    heap.insert(8)
    expect(heap.peek()).toBe(-1)

    expect(heap.size()).toBe(9)

    const extracted = heap.extract()
    expect(extracted).toBe(-1)
    expect(heap.peek()).toBe(8)
    heap.extract()
    expect(heap.peek()).toBe(9)
    heap.extract()
    expect(heap.peek()).toBe(10)
    heap.extract()
    expect(heap.peek()).toBe(10)
    heap.extract()
    expect(heap.peek()).toBe(10)
    heap.extract()
    expect(heap.peek()).toBe(12)
    heap.extract()
    expect(heap.peek()).toBe(15)
    heap.extract()
    expect(heap.peek()).toBe(100)
    heap.extract()
    expect(heap.peek()).toBe(null)
})
